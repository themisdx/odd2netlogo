TODO list for development of ODD2Netlogo
========================================
- make Count work for #turtles on same spot (for Segregation)
- references to attributes must not change the name of the attribute
- manual experiments should work without adding automatic experiments
- fix code Voting cf. Library
- fix code Fire cf. Library
- fix code FireAgents cf. Library
- fix code Segregation cf. Library (why is occupied an interaction)
- copy documentation 2019 and earlier into git: papers, reports 445, ...
- fix warnings (19) and infos (2)
- recreate MARG and fix UI on the way
- define function parameters as entities (not types), sort parameters of functions
- use reference for presentation item (data presentation)
- timed condition does not need comparison operator
- do not have text as selectable
- make dataCollection and presentation more uniform
- clean CountEntities and Collect
- Categorical should refer to the category collection (enumeration).
- indent in spawn is missing - spawn should also better be called "clone"
- Fix the editor for simulation end.
- Beautify structure class diagrams
- generate names such that they are distinct from ODD keywords and then do not check keywords
- ensure that folders (virtual packages) in the editor and other aspects match folders in structure
- introduce proper constraints for names: constraints for names: Identifiers may contain any Unicode letter or digit and the following ASCII characters: .?=*!<>:#+/%$_^'&-
- sort between github and tools.uia version and remove the tools.uia version
- Make boxes (eg add new entity) visible in all cases.
- Create boxes for activities
- create user instructions for activities
- ensure that the cursor goes to where the specification should be inputted
- Editor – fix the cursor issue  make the cursor go to the spaces
- Editor - create some decriptions (the ones that are not already there)
- Create instructions for editor in Synthetic Attributes
- When we create something it is automatically given a name- unnamed action, unnamed entity, remove the option unnamed. Also there should be the instruction insert name here in all possible locations and not only in 1 or 2 . So we should not see no name

TODOs structure
- replace CountLocation by Where
- make rationales a separate concepts and move out of UDA and entity
- make stochasticity an extra concept and move out of UDA and others
- do not create / remove initattributes of entities within entities and states (they appear now twice)
- Make description from UDA into IDescribedConcept
- remove boolean expressions and call them characterizations
- Improve and introduce (synthetic) characterizations (boolean).
- The rationale for Initialization does not need the rationale choice (Established theory etc).
- use expressions for plots, improve plot: name for plot and name for y-axis, allow colours to be defined for plot
- should sliders be expressions?
- allow let in conditional
- remove arrays? - not needed (move to future use)
- fix or remove all TODO_ concepts
TODOs constraints
- make property constraints into type system constraints
- correct handling of netlogo keyword check in INamedConceptODD
- typing of expressions
- recheck all constraints
- recheck and remove "can be child"-constraints
- Constraints- constrain options in the context menu
- Constraint- color can only be used for 1 type of entity (either entity or environment entity)
TODOs editor
- remove name4entity (UDA) editors / disallow changing names outside the definition
- make <ctrl>-B work correctly for all kinds of concepts (also when looking at errors etc.)
- better handling of sizes (ctrl-space)?
- styling for types?
- distinguish better between tool hints and informal text
- improve look and feel of entities: remove superfluous empty lines and break lines "-------------"
- make sure to be able to change "any environment" to something else
- improve styling for user input (where to select)
- Editor should consistently say "Press enter to create new entity" for all collections
- Editor should consistently say "Press ctrl-space to select" for all selections (e.g. expression)
- improve folding
- maybe use a direct reference to UDA instead of AttributeAccess for better context menu
- allow define with the same name within different functions
- remove styling hintIfNull?
- styling hint versus comment? should they be selectable?
- make good stylings for sections and user input and definitions and hints and comments
- add random uniform stochasticity editor
- improve context menu for MARG for normal activities
TODOs textgen
- move [stop] out of generation for end condition
- calculate is done in go: remove calculate from plot and recheck that it works with MARG
- localize textgen
- use textgen base components in order to simplify textgen
- improve textgen for element-wise
TODOs tool
- follow-up build ...
- fix install on Mac and Linux, maybe create only a plugin? following are the steps for Mac
  1. Install OpenJDK 14 from https://jdk.java.net/14/ by extracting the .tar.gz into a folder like /usr/local (or somewhere else you can access)
  2. From the terminal, cd to /Library/Java/JavaVirtualMachines
  3. (Well, it’s only for experts, but…) ln -s /usr/local/jdk-14.0.2.jdk
  3. (I mean) sudo ln -s /usr/local/jdk-14.0.2.jdk
  4. cd /Applications/odd2netlogo\ 1.0.app/Contents
  5. edit Info.plist — on line 93, change 10* to 14*
  6. cd MacOS
  7. ./odd2netlogo
  7. It also seems to work when you click the icon
- create plugin and not standalone
- printing of specs: use com.mbeddr.mpsutil.uisupport, which needs de.itemis.mps.editor.diagram, which needs org.apache.commons, de.itemis.tooltips, de.itemis.mps.editor.widgets, de.slisson.mps.conditionaleditor, de.q60.mps.libs
- for build of multiline we also need: de.itemis.mps.extensions.build - not sure why - probably for the multiline
TODOs later and larger
- create predefined UDAs shape, size, colour
- use kernelF for expressions
- implement Status Arena ODD in the tool
- streamline scoping using super and ODD scopes
- make all errors in textgen to real errors (see ElementWise), and insert constraints that avoid them
- run netlogo from MPS
- Import the jetbrains.mps.lang.editor.tooltips language and insert the "tooltip" cell. This lets you specify a cell to put into the editor (perhaps an icon) and a tooltip to show, when the mouse hovers over the cell.
- show init shared attributes in the entities (for each of them)
- sort out concepts in hierarchy of EntityReference
- bundle file printing with release: com.mbeddr.mpsutil.uisupport
- allow comments in the code (see ACT ONE)
- make nice logos and images
- create NetLogo in MPS?
- allow newlines within model description elements (several text elements)
- use UI from IVR for ODD: check boxes (lang.editor.forms), use folding true (video3 of Vaclav)
- Introduce unit tests
